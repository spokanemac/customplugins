#! /usr/bin/env python

######################################################################################
# Retrieve the current Wireless Network SSID

# Standard imports
import os, sys
import plistlib

# We have a toolkit available for various functions, like checking settings and running
# external commands
sys.path.append('/Library/MonitoringClient/Utilities/Modules')
from PluginToolkit import *

############################################################################################
#### Do the Work

if __name__ == '__main__':

	# Specify the command you want to run
	cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk \'/ SSID/ {print substr($0, index($0, $2))}\''

	# How many seconds do you want to give it to complete?
	# By default, the run_cmd command in the PluginToolkit gives a command a 20-second timeout
	timeout = 20

	# Run the command.
	#	You will get back 3 values - stdout, stderr, and the exit status from the command
	# If the command timed out, you will receive output saying so, and err=False and es=None
	out, err, es = run_cmd( cmd, timeout )

	# Now, you can do whatever you want to the output received from the command
	#	Look for keywords, check an app status, see if a program is active, etc
	#
	# If the command timed out, exit 1 to let the dev team know
	if ( es == None ):
		print(out)
		sys.exit(1)

	# For this sample, though, we're just going to pass along everything we received, just as
	#	though the client called the command like it was the plugin itself
	if out: print(out)
	if err: print(err)
	sys.exit(es)
